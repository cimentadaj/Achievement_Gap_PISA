cached()
drake::cache_path()
drake::cache_path
drake::cached()
drake::cached(targets_only = TRUE)
gc()
drake::cached(targets_only = TRUE)
clean(destroy = TRUE)
clean(destroy = TRUE)
clean(destroy = TRUE)
clean(destroy = TRUE)
drake_cache()
drake_cache()
drake_gc()
drake_gc()
clean(destroy = TRUE)
pak::pkg_install("drake")
drake::clean(destroy = TRUE)
r_make()
r_make()
make()
r_make()
drake_cache()$gc()
drake_cache()
create_school_dummy
r_make(
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
install.packages("rstan")
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
r_make()
clean(created_escs_dummy)
r_make()
diagnose(created_escs_dummy)
clean(created_escs_dummy)
r_make()
r_make()
clean(created_escs_dummy)
r_make()
r_make()
r_make()
clean(ends_with("quantiles_escs_chr"))
r_make()
r_make()
clean(harmonized_school)
r_make()
r_make()
harmonized_school <- readd(harmonized_school)
sum_sc
cntrys <- countries
cntrys <- countries
df_pisa <- harmonized_school$value[[1]]
wave <- "pisa2000"
filter
autonomy_var <- "academic_content_aut"
harmonized_school
plot_autonomy_public(harmonized_school, country, academic_content_aut)
plot_autonomy_public(harmonized_school, countries, academic_content_aut)
plot_autonomy_public(harmonized_school, countries, "academic_content_aut")
plot_autonomy_public(harmonized_school, countries, "academic_content_aut")
harmonized_school
cntrys
autonomy_var
plot_autonomy_public(harmonized_school, cntrys, personnel_aut)
plot_autonomy_public(harmonized_school, cntrys, personnel_aut)
plot_autonomy_public(harmonized_school, cntrys, academic_content_aut)
plot_autonomy_public(harmonized_school, cntrys, academic_content_aut)
plot_autonomy_public(harmonized_school, cntrys, academic_content_aut)
clean(ends_with("_chr"))
r_make()
aut_interact_read_budget_aut_quantiles_escs_chr <- readd(aut_interact_read_budget_aut_quantiles_escs_chr)
tst <- insight::get_data(aut_interact_read_budget_aut_quantiles_escs_chr)
aut_interact_read_budget_aut_quantiles_escs_chr
str(aut_interact_read_budget_aut_quantiles_escs_chr)
aut_interact_read_budget_aut_quantiles_escs_chr@frame
aut_interact_read_budget_aut_quantiles_escs_chr@resp
aut_interact_read_budget_aut_quantiles_escs_chr$resp
r_make()
all_slopes
all_slopes
all_slopes
clean(ends_with("_chr"))
r_make()
r_make()
all_slopes
all_slopes
all_slopes
all_slopes
all_slopes
all_slopes
all_slopes
ends_with("_chr")
clean(ends_with("_chr"))
r_make()
r_make()
all_slopes
all_slopes
all_slopes
all_slopes
all_slopes
all_slopes
rm(all_mods)
data_modelling <- readd(data_modelling)
dv <- "math"
group <- 0
aut_var <- "academic_content_aut"
filtered_data <- readd(data_modelling)
rm(data_modelling)
.x <- separate_waves[[1]]
country <- country_list[[1]]
country <- country_split[[1]]
country
school_avgs
probs <- c(.1, .9)
quan_math
quan_read
school_avgs
school_avgs %>% group_by(good_school_math) %>% summarize(avg = mean(math, na.rm = TRUE))
school_avgs %>% group_by(good_school_read) %>% summarize(avg = mean(read, na.rm = TRUE))
country %>% group_by(good_school_read) %>% summarize(avg = mean(read, na.rm = TRUE))
country
rm(.x, country)
separate_waves
.x <- separate_waves$pisa2009
country <- country_split[[10]]
country
merged_student_school <- readd(merged_student_school)
probs <- c(0.1, 0.9)
reliability <- reliability_pisa
.x <- separate_waves[[4]]
rm(.x)
reliability <- reliability_pisa
select
selected_cols
.x <- separate_waves[[4]]
country <- country_split$Germany
country
quan_math
quan_read
country
country %>% group_by(good_school_read) %>% summarize(avg = mean(read, na.rm = TRUE))
country %>% group_by(good_school_math) %>% summarize(avg = mean(math, na.rm = TRUE))
country
clean(starts_with("aut_schools"))
r_make()
r_make()
r_make()
dv <- "math"
data_modelling <- readd(data_modelling)
model_formula
group <- 1
group <- 0
all_formulas
data_modelling
stargazer(all_mods, type = "text")
data_modelling <- readd(data_modelling)
group <- 1
tst <- school2003
tst
tst <- school2003 %>% as_tibble()
tst
tst %>% filter(COUNTRY == "France ")
