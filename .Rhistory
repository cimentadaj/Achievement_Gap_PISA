filter(hasproduct != 0) %>%
widyr::pairwise_count(product, a, diag = F)
data_frame(a = paste0("abcd", c(1:185)),
dell = sample(c(1, 0, 0), size = 185, replace = TRUE),
apple = sample(c(1, 0, 0, 0, 0), size = 185, replace = TRUE),
lenovo = sample(c(1, 0), size = 185, replace = TRUE),
samsung = sample(c(1, 0), size = 185, replace = TRUE)) %>%
gather(key = product, value = hasproduct, -a) %>%
filter(hasproduct != 0) %>%
widyr::pairwise_count(product, a, diag = T)
data_frame(a = paste0("abcd", c(1:185)),
dell = sample(c(1, 0, 0), size = 185, replace = TRUE),
apple = sample(c(1, 0, 0, 0, 0), size = 185, replace = TRUE),
lenovo = sample(c(1, 0), size = 185, replace = TRUE),
samsung = sample(c(1, 0), size = 185, replace = TRUE)) %>%
gather(key = product, value = hasproduct, -a) %>%
filter(hasproduct != 0) %>%
widyr::pairwise_count(product, a, diag = T) %>%
ggplot(aes(item1, n, fill = item2)) +
geom_col(position = "stack")
data_frame(a = paste0("abcd", c(1:185)),
dell = sample(c(1, 0, 0), size = 185, replace = TRUE),
apple = sample(c(1, 0, 0, 0, 0), size = 185, replace = TRUE),
lenovo = sample(c(1, 0), size = 185, replace = TRUE),
samsung = sample(c(1, 0), size = 185, replace = TRUE)) %>%
gather(key = product, value = hasproduct, -a) %>%
widyr::pairwise_count(product, a, diag = T)
data_frame(a = paste0("abcd", c(1:185)),
dell = sample(c(1, 0, 0), size = 185, replace = TRUE),
apple = sample(c(1, 0, 0, 0, 0), size = 185, replace = TRUE),
lenovo = sample(c(1, 0), size = 185, replace = TRUE),
samsung = sample(c(1, 0), size = 185, replace = TRUE)) %>%
gather(key = product, value = hasproduct, -a) %>%
filter(hasproduct != 0) %>%
widyr::pairwise_count(product, a, diag = T)
data_frame(a = paste0("abcd", c(1:185)),
dell = sample(c(1, 0, 0), size = 185, replace = TRUE),
apple = sample(c(1, 0, 0, 0, 0), size = 185, replace = TRUE),
lenovo = sample(c(1, 0), size = 185, replace = TRUE),
samsung = sample(c(1, 0), size = 185, replace = TRUE)) %>%
gather(key = product, value = hasproduct, -a) %>%
filter(hasproduct != 0) %>%
widyr::pairwise_cor(product, a, diag = T)
data_frame(a = paste0("abcd", c(1:185)),
dell = sample(c(1, 0, 0), size = 185, replace = TRUE),
apple = sample(c(1, 0, 0, 0, 0), size = 185, replace = TRUE),
lenovo = sample(c(1, 0), size = 185, replace = TRUE),
samsung = sample(c(1, 0), size = 185, replace = TRUE)) %>%
gather(key = product, value = hasproduct, -a) %>%
filter(hasproduct != 0) %>%
widyr::pairwise_count(product, a, diag = T)
library(tidyverse)
library(rlang)
computers <- c("dell", "apple", "lenovo", "samsung")
all_dfs <-
map(computers, ~ {
df %>%
gather(computer, count, !!.x) %>%
gather(cat, value, setdiff(computers, !!.x)) %>%
mutate(cat = ifelse(count == 0, "they use same company", cat))
}) %>%
reduce(bind_rows)
all_dfs %>%
ggplot(aes(computer, fill = cat)) +
geom_bar()
computers <- c("dell", "apple", "lenovo", "samsung")
all_dfs <-
map(computers, ~ {
df %>%
gather(computer, count, !!.x) %>%
gather(cat, value, setdiff(computers, !!.x)) %>%
mutate(cat = ifelse(count == 0, "they use same company", cat))
}) %>%
reduce(bind_rows)
new_data %>%
mutate(
pred = colMeans(predictions),
pred_low = pred - (2 * sd_obs),
pred_high = pred + (2 * sd_obs)
)
sum_ready_data <-
ready_data %>%
group_by(country, num_tracks, age_selection) %>%
summarize(avg_diff = mean(difference),
diff_low = avg_diff - 2 * sd(difference),
diff_high = avg_diff + 2 * sd(difference)) %>%
ungroup()
new_data %>% left_join(sum_ready_data) %>%
filter(country %in% countries) %>%
ggplot(aes(num_tracks %>% as.factor, avg_diff, fill = num_tracks)) +
geom_errorbar(aes(ymin = diff_low, ymax = diff_high), width = 0.2, colour = "red") +
geom_point(colour = "red") +
scale_y_continuous(limits = c(0, 4)) +
geom_col(aes(y = pred, alpha = 0.4)) +
geom_errorbar(aes(ymin = pred_low, ymax = pred_high), width = 0.2) +
facet_wrap(country ~ age_selection) +
scale_fill_wsj()
sum_ready_data <-
ready_data %>%
group_by(country, num_tracks, age_selection) %>%
summarize(avg_diff = mean(difference),
diff_low = avg_diff - 2 * sd(difference),
diff_high = avg_diff + 2 * sd(difference)) %>%
ungroup()
sum_ready_data
new_data %>%
left_join(sum_ready_data) %>%
filter(country %in% countries)
new_data
new_data <-
new_data %>%
mutate(
pred = colMeans(predictions),
pred_low = pred - (2 * sd_obs),
pred_high = pred + (2 * sd_obs)
)
sum_ready_data <-
ready_data %>%
group_by(country, num_tracks, age_selection) %>%
summarize(avg_diff = mean(difference),
diff_low = avg_diff - 2 * sd(difference),
diff_high = avg_diff + 2 * sd(difference)) %>%
ungroup()
new_data %>%
left_join(sum_ready_data) %>%
filter(country %in% countries) %>%
ggplot(aes(num_tracks %>% as.factor, avg_diff, fill = num_tracks)) +
geom_errorbar(aes(ymin = diff_low, ymax = diff_high), width = 0.2, colour = "red") +
geom_point(colour = "red") +
scale_y_continuous(limits = c(0, 4)) +
geom_col(aes(y = pred, alpha = 0.4)) +
geom_errorbar(aes(ymin = pred_low, ymax = pred_high), width = 0.2) +
facet_wrap(country ~ age_selection) +
scale_fill_wsj()
posterior_interval(mod_tracking)
?posterior_interval(mod_tracking)
rstanarm::posterior_interval(mod_tracking)
mod_tracking
?pp_check()
pp_check(mod_tracking, type = "error_hist")
pp_check(mod_tracking, type = "error_hist", nsamples = 5)
pp_check(mod_tracking, type = "error_hist", nsamples = 6)
pp_check(mod_tracking, type = "scatter_avg", nsamples = 5)
?pp_check()
pp_check(mod_tracking, type = "stat_2d", nsamples = 5)
pp_check(mod_tracking, type = "stat_2d", nsamples = 20)
pp_check(mod_tracking, type = "stat_2d", nsamples = 100)
?cauchy
pp_check(mod_tracking, nsamples = 100)
pp_check(mod_tracking, type = "yxz", nsamples = 100)
pp_check(mod_tracking, type = "bars", nsamples = 100)
pp_check(mod_tracking, type = "error_hist", nsamples = 100)
pp_check(mod_tracking, type = "error_hist", nsamples = 6)
new_data <-
new_data %>%
mutate(
pred = colMeans(predictions),
pred_low = pred - (2 * sd_obs),
pred_high = pred + (2 * sd_obs)
)
new_data %>%
slice(which.min(difference), which.min(pred))
new_data %>%
slice({which.min(difference), which.min(pred)})
new_data %>%
slice(c(which.min(difference), which.min(pred)))
new_data
ready_data <-
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)))
ready_data <-
ready_data %>%
filter(country %in% countries) %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)))
ready_data <-
difference_data %>%
left_join(tracking_data, by = c("country" = "cntry_name")) %>%
left_join(central_examination) %>%
mutate(num_tracks = ifelse(tracks15y == 1, 1, 0) %>% as.factor,
age_selection = ifelse(selage >= 15, 1, 0))
ready_data <-
difference_data %>%
left_join(tracking_data, by = c("country" = "cntry_name")) %>%
left_join(central_examination) %>%
mutate(num_tracks = ifelse(tracks15y == 1, 1, 0) %>% as.factor,
age_selection = ifelse(selage >= 15, 1, 0)) %>%
filter(!is.na(num_tracks), !is.na(age_selection), !is.na(difference))
new_data <-
ready_data %>%
filter(country %in% countries) %>%
expand(country, age_selection, num_tracks) %>%
filter(complete.cases(.))
predictions <- posterior_predict(mod_tracking, newdata = new_data)
sd_obs <- colSds(predictions)
new_data <-
new_data %>%
mutate(
pred = colMeans(predictions),
pred_low = pred - (2 * sd_obs),
pred_high = pred + (2 * sd_obs)
)
ready_data <-
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)))
ready_data
ready_data %>% slice(c(which.min(difference), which.mean(pred)))
ready_data %>% slice(c(which.min(difference), which.min(pred)))
ready_data %>% slice(c(which.min(difference), which.min(pred))) %>% select(difference, pred)
ready_data %>% filter(difference == min(difference)) %>% select(difference, pred)
ready_data %>% filter(difference == max(difference)) %>% select(difference, pred)
ready_data %>% transmute(over_pred = pred > difference) %>% summarize(mean(over_pred))
ready_data %>% transmute(over_pred = pred - difference) %>% summarize(mean(over_pred))
ready_data <-
difference_data %>%
left_join(tracking_data, by = c("country" = "cntry_name")) %>%
left_join(central_examination) %>%
mutate(num_tracks = ifelse(tracks15y == 1, 1, 0) %>% as.factor,
age_selection = ifelse(selage >= 15, 1, 0)) %>%
filter(!is.na(num_tracks), !is.na(age_selection), !is.na(difference))
ready_data <-
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[, 1, drop = TRUE])
predictions[1:5, ]
ready_data
length(colMeans(posterior_predict(mod_tracking))
)]
length(colMeans(posterior_predict(mod_tracking)))
sample(1:4000)
sample(1, 1:4000)
sample(1, 1:4000)
sample(1:4000, 1)
sample(1:4000, 1)
sample(1:4000, 1)
sample(1:4000, 1)
ready_data <-
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE])
ready_data %>% transmute(over_pred = pred > difference) %>% summarize(mean(over_pred))
ready_data %>% transmute(over_pred_perc = pred > difference,
over_pred_minus = pred - difference) %>%
summarize(mean(over_pred_perc),
mean(over_pred_minus))
ready_data <-
difference_data %>%
left_join(tracking_data, by = c("country" = "cntry_name")) %>%
left_join(central_examination) %>%
mutate(num_tracks = ifelse(tracks15y == 1, 1, 0) %>% as.factor,
age_selection = ifelse(selage >= 15, 1, 0)) %>%
filter(!is.na(num_tracks), !is.na(age_selection), !is.na(difference))
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(mean(pred > difference),
mean(pred - difference))
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(mean(pred > difference),
mean(pred - difference))
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(mean(pred > difference),
mean(pred - difference))
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_mean = mean(pred > difference),
minus_mean = mean(pred - difference),
perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_mean = mean(pred > difference),
minus_mean = mean(pred - difference),
perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_mean = mean(pred > difference),
minus_mean = mean(pred - difference),
perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_mean = mean(pred > difference),
minus_mean = mean(pred - difference),
perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
?replicate
replication <-
replicate(n = 100, {
ready_data %>%
mutate(pred = colMeans(posterior_predict(mod_tracking)),
pred_sample = posterior_predict(mod_tracking)[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_mean = mean(pred > difference),
minus_mean = mean(pred - difference),
perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
y_rep <- posterior_predict(mod_tracking)
replication <-
replicate(n = 100, {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
replication <-
replicate(n = 1000, {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
y_rep[[1]]
cimentadaj::describe(y_rep)
cimentadaj::describe(replication)
replication <-
map(1:100, {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
replication <-
map(1:100, ~ {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
replication <-
map(1:1000, ~ {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
replication[[1]]
replication[[2]]
replication %>%
enframe() %>%
unnest()
replication %>%
enframe() %>%
unnest() %>%
qplot("perc_sample", geom = "histogram", data = .)
replication %>%
enframe() %>%
unnest() %>%
qplot(perc_sample, geom = "histogram", data = .)
replication <-
map(1:2000, ~ {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
replication %>%
enframe() %>%
unnest() %>%
qplot(perc_sample, geom = "histogram", data = .)
replication %>%
enframe() %>%
unnest() %>%
summarize(mean(between(perc_sample, 0.45, 0.55)))
mod_tracking <-
brms::brm(
difference ~
num_tracks +
age_selection + (1 | country),
family = gaussian(),
data = ready_data,
prior = c(set_prior("normal(2, 0.5)", coef = "num_tracks1"),
set_prior("normal(13, 1)", coef = "age_selection")
),
warmup = 1000, iter = 2000, chains = 5
)
mod_tracking
new_data <-
ready_data %>%
filter(country %in% countries) %>%
expand(country, age_selection, num_tracks) %>%
filter(complete.cases(.))
predictions <- posterior_predict(mod_tracking, newdata = new_data)
sd_obs <- colSds(predictions)
new_data <-
new_data %>%
mutate(
pred = colMeans(predictions),
pred_low = pred - (2 * sd_obs),
pred_high = pred + (2 * sd_obs)
)
y_rep <- posterior_predict(mod_tracking)
replication <-
map(1:2000, ~ {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
replication %>%
enframe() %>%
unnest() %>%
qplot(perc_sample, geom = "histogram", data = .)
replication %>%
enframe() %>%
unnest() %>%
summarize(mean(between(perc_sample, 0.45, 0.55)))
mod_tracking <-
brms::brm(
difference ~
num_tracks +
age_selection + (1 | country),
family = gaussian(),
data = ready_data,
prior = c(set_prior("cauchy(2, 0.5)", coef = "num_tracks1"),
set_prior("cauchy(13, 1)", coef = "age_selection")
),
warmup = 1000, iter = 2000, chains = 5
)
replication <-
map(1:2000, ~ {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
y_rep <- posterior_predict(mod_tracking)
replication <-
map(1:2000, ~ {
ready_data %>%
mutate(pred_sample = y_rep[sample(1:4000, 1), , drop = TRUE]) %>%
summarize(perc_sample = mean(pred_sample > difference),
minus_sample = mean(pred_sample - difference))
})
replication %>%
enframe() %>%
unnest() %>%
qplot(minus_sample, geom = "histogram", data = .)
replication %>%
enframe() %>%
unnest() %>%
summarize(mean(between(perc_sample, 0.45, 0.55)))
replication %>%
enframe() %>%
unnest() %>%
summarize(mean(between(minus_sample, -0.05, 0.05)))
pp_check()
pp_check(mod_tracking)
pp_check(mod_tracking, nsamples = 100)
pp_check(mod_tracking, type = "xyz", nsamples = 100)
pp_check(mod_tracking, type = "ribbon", nsamples = 100)
?pp_check
pp_check(mod_tracking, type = "error_scatter", nsamples = 100)
pp_check(mod_tracking, type = "error_scatter", nsamples = 16)
pp_check(mod_tracking, type = "error_scatter", nsamples = 6)
pp_check(mod_tracking, type = "error_scatter_avg", nsamples = 6)
pp_check(mod_tracking, type = "boxplot", nsamples = 6)
pp_check(mod_tracking, type = "boxplot", nsamples = 10)
pp_check(mod_tracking, type = "boxplot", nsamples = 20)
pp_check(mod_tracking, type = "boxplot", nsamples = 50)
mod_tracking <-
brms::brm(
difference ~
num_tracks +
age_selection + (1 | country),
family = gaussian(),
data = ready_data,
prior = c(set_prior("cauchy(2, 0.5)", coef = "num_tracks1"),
set_prior("cauchy(13, 1)", coef = "age_selection")
),
warmup = 1000, iter = 2000, chains = 5
)
new_data <-
ready_data %>%
filter(country %in% countries) %>%
expand(country, age_selection, num_tracks) %>%
filter(complete.cases(.))
predictions <- posterior_predict(mod_tracking, newdata = new_data)
sd_obs <- colSds(predictions)
new_data <-
new_data %>%
mutate(
pred = colMeans(predictions),
pred_low = pred - (2 * sd_obs),
pred_high = pred + (2 * sd_obs)
)
sum_ready_data <-
ready_data %>%
group_by(country, num_tracks, age_selection) %>%
summarize(avg_diff = mean(difference),
diff_low = avg_diff - 2 * sd(difference),
diff_high = avg_diff + 2 * sd(difference)) %>%
ungroup()
new_data %>%
left_join(sum_ready_data) %>%
filter(country %in% countries) %>%
ggplot(aes(num_tracks %>% as.factor, avg_diff, fill = num_tracks)) +
geom_errorbar(aes(ymin = diff_low, ymax = diff_high), width = 0.2, colour = "red") +
geom_point(colour = "red") +
scale_y_continuous(limits = c(0, 4)) +
geom_col(aes(y = pred, alpha = 0.4)) +
geom_errorbar(aes(ymin = pred_low, ymax = pred_high), width = 0.2) +
facet_wrap(country ~ age_selection) +
scale_fill_wsj()
