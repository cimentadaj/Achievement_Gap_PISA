left_join(differences, bounds_lower) %>%
left_join(bounds_upper) %>%
left_join(original_math) %>%
left_join(original_read)
}
complete_data_topbottom <- pisa_preparer(results_math, results_read)
complete_data_topmid <- pisa_preparer(results_math_topmid, results_read_topmid)
complete_data_midbottom <- pisa_preparer(results_math_midbottom, results_read_midbottom)
complete_data_topbottom <- mutate(complete_data_topbottom, type = "90th/10th SES gap")
complete_data_topmid <- mutate(complete_data_topmid, type = "90th/50th SES gap")
complete_data_midbottom <- mutate(complete_data_midbottom, type = "50th/10th SES gap")
pisa_preparer <- function(df_math, df_read) {
descrip_math <- map(df_math, ~ rename(.x, mean_math = Mean, se_math = s.e.))
descrip_read <- map(df_read, ~ rename(.x, mean_read = Mean, se_read = s.e.))
reduced_data_math <-
map2(descrip_math, years, function(.x, .y) {
.x %>%
mutate(wave = .y) %>%
filter(!is.na(escs_dummy))
}) %>%
bind_rows() %>%
as_tibble() %>%
mutate(lower_math = mean_math - 1.96 * se_math,
upper_math = mean_math + 1.96 * se_math)
reduced_data_read <-
map2(descrip_read, years, function(.x, .y) {
.x %>%
mutate(wave = .y) %>%
filter(!is.na(escs_dummy))
}) %>%
bind_rows() %>%
as_tibble() %>%
mutate(lower_read = mean_read - 1.96 * se_read,
upper_read = mean_read + 1.96 * se_read)
reduced_data <- left_join(reduced_data_math,
reduced_data_read, by = c("country", "escs_dummy", "wave"))
# Merging math and reading data
test_data <-
reduced_data %>%
select(country, wave, escs_dummy, contains("mean")) %>%
gather(test, score, contains("mean"))
math_data <-
reduced_data %>%
select(country, wave, escs_dummy, contains("math")) %>%
gather(test_bound, bound, contains("lower"), contains("upper")) %>%
select(-contains("math")) %>%
right_join(filter(test_data, test == "mean_math"))
read_data <-
reduced_data %>%
select(country, wave, escs_dummy, contains("read")) %>%
gather(test_bound, bound, contains("lower"), contains("upper")) %>%
select(-contains("read")) %>%
right_join(filter(test_data, test == "mean_read"))
all_data <- bind_rows(math_data, read_data)
# Calculate the joint standard error of the difference
math_se_data <-
reduced_data %>%
select(country, escs_dummy, wave, se_math) %>%
spread(escs_dummy, se_math) %>%
transmute(country, wave,
se_diff_math = sqrt(abs(`1`^2 - `0`^2)))
read_se_data <-
reduced_data %>%
select(country, escs_dummy, wave, se_read) %>%
spread(escs_dummy, se_read) %>%
transmute(country, wave,
se_diff_read = sqrt(abs(`1`^2 - `0`^2)))
se_data <- left_join(math_se_data, read_se_data)
# Calculate the different between the gap and together with it's joint s.e graph
# the absolut difference.
math_diff <-
reduced_data %>%
select(wave, country, escs_dummy, mean_math) %>%
spread(escs_dummy, mean_math) %>%
transmute(wave, country, diff_math = `1` - `0`)
read_diff <-
reduced_data %>%
select(wave, country, escs_dummy, mean_read) %>%
spread(escs_dummy, mean_read) %>%
transmute(wave, country, diff_read = `1` - `0`)
data_summaries <-
math_diff %>%
left_join(read_diff) %>%
left_join(se_data) %>%
transmute(wave, country, diff_math, diff_read,
lower_math = diff_math - 1.96 * se_diff_math,
lower_read = diff_read - 1.96 * se_diff_read,
upper_math = diff_math + 1.96 * se_diff_math,
upper_read = diff_read + 1.96 * se_diff_read)
differences <-
data_summaries %>%
select(wave, country, diff_math, diff_read) %>%
gather(test, difference, starts_with("diff")) %>%
mutate(type_test = ifelse(.$test == "diff_math", "math", "read"))
bounds_lower <-
data_summaries %>%
select(wave, country, contains("lower")) %>%
gather(lower_bound, lower, lower_math, lower_read) %>%
mutate(type_test = ifelse(grepl("math", .$lower_bound), "math", "read"))
bounds_upper <-
data_summaries %>%
select(wave, country, contains("upper")) %>%
gather(upper_bound, upper, upper_math, upper_read) %>%
mutate(type_test = ifelse(grepl("math", .$upper_bound), "math", "read"))
# Getting the original data in
original_math <-
reduced_data_math %>%
select(wave, everything(), -se_math) %>%
gather(metric, value, -(wave:escs_dummy)) %>%
unite(combination, escs_dummy, metric, sep = "_") %>%
spread(combination, value) %>%
mutate(type_test = "math")
original_read <-
reduced_data_read %>%
select(wave, everything(), -se_read) %>%
gather(metric, value, -(wave:escs_dummy)) %>%
unite(combination, escs_dummy, metric, sep = "_") %>%
spread(combination, value) %>%
mutate(type_test = "read")
# final data
complete_data <-
left_join(differences, bounds_lower) %>%
left_join(bounds_upper) %>%
left_join(original_math) %>%
left_join(original_read)
}
complete_data_topbottom <- pisa_preparer(results_math, results_read)
pisa_preparer <- function(df_math, df_read) {
descrip_math <- map(df_math, ~ rename(.x, mean_math = Mean, se_math = s.e.))
descrip_read <- map(df_read, ~ rename(.x, mean_read = Mean, se_read = s.e.))
reduced_data_math <-
map2(descrip_math, years, function(.x, .y) {
.x %>%
mutate(wave = .y) %>%
filter(!is.na(escs_dummy))
}) %>%
bind_rows() %>%
as_tibble() %>%
mutate(lower_math = mean_math - 1.96 * se_math,
upper_math = mean_math + 1.96 * se_math)
reduced_data_read <-
map2(descrip_read, years, function(.x, .y) {
.x %>%
mutate(wave = .y) %>%
filter(!is.na(escs_dummy))
}) %>%
bind_rows() %>%
as_tibble() %>%
mutate(lower_read = mean_read - 1.96 * se_read,
upper_read = mean_read + 1.96 * se_read)
reduced_data <- left_join(reduced_data_math,
reduced_data_read, by = c("country", "escs_dummy", "wave"))
# Merging math and reading data
test_data <-
reduced_data %>%
dplyr::select(country, wave, escs_dummy, contains("mean")) %>%
gather(test, score, contains("mean"))
math_data <-
reduced_data %>%
dplyr::select(country, wave, escs_dummy, contains("math")) %>%
gather(test_bound, bound, contains("lower"), contains("upper")) %>%
dplyr::select(-contains("math")) %>%
right_join(filter(test_data, test == "mean_math"))
read_data <-
reduced_data %>%
dplyr::select(country, wave, escs_dummy, contains("read")) %>%
gather(test_bound, bound, contains("lower"), contains("upper")) %>%
dplyr::select(-contains("read")) %>%
right_join(filter(test_data, test == "mean_read"))
all_data <- bind_rows(math_data, read_data)
# Calculate the joint standard error of the difference
math_se_data <-
reduced_data %>%
dplyr::select(country, escs_dummy, wave, se_math) %>%
spread(escs_dummy, se_math) %>%
transmute(country, wave,
se_diff_math = sqrt(abs(`1`^2 - `0`^2)))
read_se_data <-
reduced_data %>%
dplyr::select(country, escs_dummy, wave, se_read) %>%
spread(escs_dummy, se_read) %>%
transmute(country, wave,
se_diff_read = sqrt(abs(`1`^2 - `0`^2)))
se_data <- left_join(math_se_data, read_se_data)
# Calculate the different between the gap and together with it's joint s.e graph
# the absolut difference.
math_diff <-
reduced_data %>%
dplyr::select(wave, country, escs_dummy, mean_math) %>%
spread(escs_dummy, mean_math) %>%
transmute(wave, country, diff_math = `1` - `0`)
read_diff <-
reduced_data %>%
dplyr::select(wave, country, escs_dummy, mean_read) %>%
spread(escs_dummy, mean_read) %>%
transmute(wave, country, diff_read = `1` - `0`)
data_summaries <-
math_diff %>%
left_join(read_diff) %>%
left_join(se_data) %>%
transmute(wave, country, diff_math, diff_read,
lower_math = diff_math - 1.96 * se_diff_math,
lower_read = diff_read - 1.96 * se_diff_read,
upper_math = diff_math + 1.96 * se_diff_math,
upper_read = diff_read + 1.96 * se_diff_read)
differences <-
data_summaries %>%
dplyr::select(wave, country, diff_math, diff_read) %>%
gather(test, difference, starts_with("diff")) %>%
mutate(type_test = ifelse(.$test == "diff_math", "math", "read"))
bounds_lower <-
data_summaries %>%
dplyr::select(wave, country, contains("lower")) %>%
gather(lower_bound, lower, lower_math, lower_read) %>%
mutate(type_test = ifelse(grepl("math", .$lower_bound), "math", "read"))
bounds_upper <-
data_summaries %>%
dplyr::select(wave, country, contains("upper")) %>%
gather(upper_bound, upper, upper_math, upper_read) %>%
mutate(type_test = ifelse(grepl("math", .$upper_bound), "math", "read"))
# Getting the original data in
original_math <-
reduced_data_math %>%
dplyr::select(wave, everything(), -se_math) %>%
gather(metric, value, -(wave:escs_dummy)) %>%
unite(combination, escs_dummy, metric, sep = "_") %>%
spread(combination, value) %>%
mutate(type_test = "math")
original_read <-
reduced_data_read %>%
dplyr::select(wave, everything(), -se_read) %>%
gather(metric, value, -(wave:escs_dummy)) %>%
unite(combination, escs_dummy, metric, sep = "_") %>%
spread(combination, value) %>%
mutate(type_test = "read")
# final data
complete_data <-
left_join(differences, bounds_lower) %>%
left_join(bounds_upper) %>%
left_join(original_math) %>%
left_join(original_read)
}
complete_data_topbottom <- pisa_preparer(results_math, results_read)
complete_data_topmid <- pisa_preparer(results_math_topmid, results_read_topmid)
complete_data_midbottom <- pisa_preparer(results_math_midbottom, results_read_midbottom)
complete_data_topbottom <- mutate(complete_data_topbottom, type = "90th/10th SES gap")
complete_data_topmid <- mutate(complete_data_topmid, type = "90th/50th SES gap")
complete_data_midbottom <- mutate(complete_data_midbottom, type = "50th/10th SES gap")
complete_gaps <-
complete_data_topbottom %>%
bind_rows(complete_data_topbottom_80)
complete_gaps <-
complete_data_topbottom %>%
bind_rows(complete_data_topbottom_80) %>%
bind_rows(complete_data_topbottom_70)
complete_gaps %>%
mutate(country = factor(country, levels = ordered_cnt, ordered = TRUE)) %>%
filter(type_test == "math",
country %in% countries) %>%
ggplot(aes(as.character(wave), difference, colour = type, linetype = type, group = type)) +
geom_line(stat = "smooth", method = "lm", size = 0.7) +
facet_wrap(~ country, ncol = 5) +
scale_colour_discrete(name = "Type of gaps") +
scale_linetype_discrete(name = "Type of gaps") +
scale_y_continuous(name = "Gaps in SD", expand = c(0, 0), lim = c(0, 3)) +
scale_x_discrete(name = NULL, breaks = c(2000, 2009, 2015)) +
ggthemes::theme_few() +
theme(panel.spacing = unit(1, "lines"),
panel.grid.major.y = element_line(colour = "grey"),
legend.title = ) +
ggtitle("Evolution of the different achievement gaps")
lm_data <- function(df) {
lm(log(difference) ~ wave, data = df) %>%
broom::tidy() %>%
mutate(estimate = exp(estimate))
}
ordered_cnt <-
complete_data_topbottom %>%
filter(type_test == "math") %>%
select(wave, country, difference) %>%
filter(country %in% countries) %>%
split(.$country) %>%
map(lm_data) %>%
enframer("country") %>%
filter(term == "wave") %>%
arrange(-estimate) %>%
pull(country)
environment()
?environment()
environment("select")
environment(select)
complete_data_topbottom_80 <-
pisa_preparer(results_math_80, results_read_80) %>%
mutate(type = "80th/20th SES gap")
complete_data_topmid_80 <-
pisa_preparer(results_math_topmid_80, results_read_topmid_80) %>%
mutate(type = "80th/50th SES gap")
complete_data_midbottom_80 <-
pisa_preparer(results_math_midbottom_80, results_read_midbottom_80) %>%
mutate(type = "50th/20th SES gap")
complete_data_topbottom_70 <-
pisa_preparer(results_math_70, results_read_70) %>%
mutate(type = "70th/30th SES gap")
complete_data_topmid_70 <-
pisa_preparer(results_math_topmid_70, results_read_topmid_70) %>%
mutate(type = "70th/50th SES gap")
complete_data_midbottom_70 <-
pisa_preparer(results_math_midbottom_70, results_read_midbottom_70) %>%
mutate(type = "50th/30th SES gap")
complete_gaps <-
complete_data_topbottom %>%
bind_rows(complete_data_topbottom_80)
bind_rows(complete_data_topbottom_70)
complete_gaps %>%
mutate(country = factor(country, levels = ordered_cnt, ordered = TRUE)) %>%
filter(type_test == "math",
country %in% countries) %>%
ggplot(aes(as.character(wave), difference, colour = type, linetype = type, group = type)) +
geom_line(stat = "smooth", method = "lm", size = 0.7) +
facet_wrap(~ country, ncol = 5) +
scale_colour_discrete(name = "Type of gaps") +
scale_linetype_discrete(name = "Type of gaps") +
scale_y_continuous(name = "Gaps in SD", expand = c(0, 0), lim = c(0, 3)) +
scale_x_discrete(name = NULL, breaks = c(2000, 2009, 2015)) +
ggthemes::theme_few() +
theme(panel.spacing = unit(1, "lines"),
panel.grid.major.y = element_line(colour = "grey"),
legend.title = ) +
ggtitle("Evolution of the different achievement gaps")
lm_data <- function(df) {
lm(log(difference) ~ wave, data = df) %>%
broom::tidy() %>%
mutate(estimate = exp(estimate))
}
ordered_cnt <-
complete_data_topbottom %>%
filter(type_test == "math") %>%
select(wave, country, difference) %>%
filter(country %in% countries) %>%
split(.$country) %>%
map(lm_data) %>%
enframer("country") %>%
filter(term == "wave") %>%
arrange(-estimate) %>%
pull(country)
ordered_cnt <-
complete_data_topbottom %>%
filter(type_test == "math") %>%
dplyr::select(wave, country, difference) %>%
filter(country %in% countries) %>%
split(.$country) %>%
map(lm_data) %>%
enframer("country") %>%
filter(term == "wave") %>%
arrange(-estimate) %>%
pull(country)
complete_gaps %>%
mutate(country = factor(country, levels = ordered_cnt, ordered = TRUE)) %>%
filter(type_test == "math",
country %in% countries) %>%
ggplot(aes(as.character(wave), difference, colour = type, linetype = type, group = type)) +
geom_line(stat = "smooth", method = "lm", size = 0.7) +
facet_wrap(~ country, ncol = 5) +
scale_colour_discrete(name = "Type of gaps") +
scale_linetype_discrete(name = "Type of gaps") +
scale_y_continuous(name = "Gaps in SD", expand = c(0, 0), lim = c(0, 3)) +
scale_x_discrete(name = NULL, breaks = c(2000, 2009, 2015)) +
ggthemes::theme_few() +
theme(panel.spacing = unit(1, "lines"),
panel.grid.major.y = element_line(colour = "grey"),
legend.title = ) +
ggtitle("Evolution of the different achievement gaps")
complete_gaps <-
complete_data_topbottom %>%
bind_rows(complete_data_topbottom_80) %>%
bind_rows(complete_data_topbottom_70)
complete_gaps %>%
mutate(country = factor(country, levels = ordered_cnt, ordered = TRUE)) %>%
filter(type_test == "math",
country %in% countries) %>%
ggplot(aes(as.character(wave), difference, colour = type, linetype = type, group = type)) +
geom_line(stat = "smooth", method = "lm", size = 0.7) +
facet_wrap(~ country, ncol = 5) +
scale_colour_discrete(name = "Type of gaps") +
scale_linetype_discrete(name = "Type of gaps") +
scale_y_continuous(name = "Gaps in SD", expand = c(0, 0), lim = c(0, 3)) +
scale_x_discrete(name = NULL, breaks = c(2000, 2009, 2015)) +
ggthemes::theme_few() +
theme(panel.spacing = unit(1, "lines"),
panel.grid.major.y = element_line(colour = "grey"),
legend.title = ) +
ggtitle("Evolution of the different achievement gaps")
perc_increase_fun(complete_data_topbottom_80) %>%
perc_graph("math",
"80/20 achievement gap",
"Percentage change from 2000 to 2015")
perc_increase_fun <- function(df) {
# Average standard deviation increase
data_ready <-
df %>%
dplyr::select(wave, country, type_test, difference) %>%
group_by(type_test) %>%
split(.$country) %>%
map(~ {
.x <-
spread(.x, wave, difference) %>%
ungroup()
year_vars <- sum(map_dbl(.x, is.numeric)) - 1
years_subtract <- names(.x)[c(ncol(.x) - year_vars, ncol(.x))]
years_subtract <- lapply(years_subtract, as.name)
last_year <- rlang::new_quosure(years_subtract[[2]], env = .GlobalEnv)
first_year <- rlang::new_quosure(years_subtract[[1]], env = .GlobalEnv)
years_available <-
.x %>%
gather(year, val, -(country:type_test)) %>%
group_by(type_test) %>%
summarise(yr_avaible = sum(!is.na(val))) %>%
pull(yr_avaible)
year_sd <-
.x %>%
gather(year, val, -(country:type_test)) %>%
split(.$type_test) %>%
map_dbl(~ bootstrapper(.x, mad(val, na.rm = T), B = 100) %>% .[[2, 2]]) %>%
round(2) * 100
.x %>%
map_if(is_double, round, 3) %>%
as_tibble() %>%
transmute(type_test,
country,
perc_diff = round(((!!last_year) - (!!first_year)) * 100, 1),
sd_year = year_sd,
diff_lower = perc_diff - 1 * year_sd,
diff_upper = perc_diff + 1 * year_sd,
years_available = years_available)
})
data_ready
}
perc_increase_fun(complete_data_topbottom_80) %>%
perc_graph("math",
"80/20 achievement gap",
"Percentage change from 2000 to 2015")
perc_graph <- function(df, test, title, subtitle = NULL) {
df %>%
enframe(name = "country") %>%
unnest(value) %>%
filter(country %in% countries) %>%
select(-country1, -years_available) %>%
mutate(diff_95_lower = perc_diff - 2*sd_year,
diff_95_upper = perc_diff + 2*sd_year) %>%
setNames(c("Country", "Type of test", "Average % difference", "Average SD",
"Lower 50% bound", "Upper 50% bound", "Lower 95% bound", "Upper 95% bound")) %>%
filter(`Type of test` == test) %>%
arrange(`Average % difference`) %>%
mutate(Country = ordered(forcats::as_factor(Country)),
Country_num = as.numeric(Country)) %>%
ggplot(aes(Country, `Average % difference`, fill = `Average % difference` > 0)) +
geom_hline(yintercept = 0, linetype = "longdash") +
geom_point() +
geom_ribbon(aes(x = Country_num, ymin = `Lower 95% bound`, ymax = `Upper 95% bound`), alpha = 0.3) +
geom_ribbon(aes(x = Country_num, ymin = `Lower 50% bound`, ymax = `Upper 50% bound`), alpha = 0.2) +
geom_linerange(aes(ymin = 0, ymax = `Average % difference`,
colour = `Average % difference` > 0), alpha = 0.4) +
scale_y_continuous(name = "Avg % increase/decrease",breaks = seq(-160, 160, 40)) +
scale_fill_discrete(guide = FALSE) +
scale_colour_discrete(guide = FALSE) +
coord_cartesian(ylim = c(-160, 160)) +
ggtitle(title, subtitle) +
ggthemes::theme_few() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
perc_increase_fun(complete_data_topbottom_80) %>%
perc_graph("math",
"80/20 achievement gap",
"Percentage change from 2000 to 2015")
perc_graph <- function(df, test, title, subtitle = NULL) {
df %>%
enframe(name = "country") %>%
unnest(value) %>%
filter(country %in% countries) %>%
dplyr::select(-country1, -years_available) %>%
mutate(diff_95_lower = perc_diff - 2*sd_year,
diff_95_upper = perc_diff + 2*sd_year) %>%
setNames(c("Country", "Type of test", "Average % difference", "Average SD",
"Lower 50% bound", "Upper 50% bound", "Lower 95% bound", "Upper 95% bound")) %>%
filter(`Type of test` == test) %>%
arrange(`Average % difference`) %>%
mutate(Country = ordered(forcats::as_factor(Country)),
Country_num = as.numeric(Country)) %>%
ggplot(aes(Country, `Average % difference`, fill = `Average % difference` > 0)) +
geom_hline(yintercept = 0, linetype = "longdash") +
geom_point() +
geom_ribbon(aes(x = Country_num, ymin = `Lower 95% bound`, ymax = `Upper 95% bound`), alpha = 0.3) +
geom_ribbon(aes(x = Country_num, ymin = `Lower 50% bound`, ymax = `Upper 50% bound`), alpha = 0.2) +
geom_linerange(aes(ymin = 0, ymax = `Average % difference`,
colour = `Average % difference` > 0), alpha = 0.4) +
scale_y_continuous(name = "Avg % increase/decrease",breaks = seq(-160, 160, 40)) +
scale_fill_discrete(guide = FALSE) +
scale_colour_discrete(guide = FALSE) +
coord_cartesian(ylim = c(-160, 160)) +
ggtitle(title, subtitle) +
ggthemes::theme_few() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
}
perc_increase_fun(complete_data_topbottom_80) %>%
perc_graph("math",
"80/20 achievement gap",
"Percentage change from 2000 to 2015")
perc_increase_fun(complete_data_topbottom_70) %>%
perc_graph("math",
"70/30 achievement gap",
"Percentage change from 2000 to 2015")
ls()
