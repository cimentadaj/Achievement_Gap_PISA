select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, combn, c("num_tracks", "age_selection"), sep = "_")
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_")
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff,
`Predicted inequality` = pred
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(2),
`Predicted inequality` = pred %>% round(2)
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff,
`Predicted inequality` = pred
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3)
)
(1.58 - 1.27) / `Actual inequality`
(1.58 - 1.27) / 1.58
(1.58 - 1.27) / 1.58 * 100
(1.58 - 1.27) / 1.58 * 100 %>% round(0)
(1.58 - 1.27) / 1.58 * 100 %>% ceiling
?ceiling
(1.58 - 1.27) / (1.58 * 100) %>% ceiling
(1.58 - 1.27) / (1.58 * 100) %>% floor
(1.58 - 1.27) / (1.58 * 100)
((1.58 - 1.27) / 1.58) * 100
((1.58 - 1.27) / 1.58) * 100 %>% ceiling
?ceiling
((1.58 - 1.27) / 1.58) * 100 %>% trunc
((1.58 - 1.27) / 1.58) * 100 %>% round(2)
((1.58 - 1.27) / 1.58) * 100 %>% round(3)
((1.58 - 1.27) / 1.58) * 100
(((1.58 - 1.27) / 1.58) * 100) %>% round(2)
(((1.58 - 1.27) / 1.58) * 100) %>% ceiling(2)
(((1.58 - 1.27) / 1.58) * 100) %>% ceiling()
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = (`Actual inequality` - `Predicted inequality`/ `Actual inequality`) * 100 %>%
ceiling()
)
((1.58 - 1.27) / 1.58) * 100
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = ((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) * 100
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = ((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) * 100 %>%
ceiling
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = (((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) * 100) %>%
ceiling
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = ((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) %>%
ceiling() * 100
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = ((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) %>%
ceiling()
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = (((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) * 100) %>%
ceiling
)
p %>%
left_join(m %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = (((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) * 100) %>%
ceiling %>% paste0("%")
)
new_data %>%
left_join(sum_ready_data) %>%
filter(!is.na(avg_diff) | num_tracks == 1 & age_selection == 1) %>%
select(country, num_tracks, age_selection, pred, avg_diff)
pred_avg_diff<-
new_data %>%
left_join(sum_ready_data) %>%
filter(!is.na(avg_diff) | num_tracks == 1 & age_selection == 1) %>%
select(country, num_tracks, age_selection, pred, avg_diff)
track_should_change <- pred_avg_diff$country[pred_avg_diff$country %>% duplicated]
pred_avg_diff %>%
filter(country %in% track_should_change) %>%
transmute(country,
avg_diff = ifelse(avg_diff %>% is.na, pred, avg_diff),
combn = paste0(num_tracks, "_", age_selection)) %>%
filter(combn != "1_1")
rm(m)
avg_diff_data <-
pred_avg_diff %>%
filter(country %in% track_should_change) %>%
transmute(country,
avg_diff = ifelse(avg_diff %>% is.na, pred, avg_diff),
combn = paste0(num_tracks, "_", age_selection)) %>%
filter(combn != "1_1")
avg_diff_data %>%
left_join(pred_avg_diff %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = (((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) * 100) %>%
ceiling %>% paste0("%")
)
final_avg_diff_table <-
avg_diff_data %>%
left_join(pred_avg_diff %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = (((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) * 100) %>%
ceiling %>% paste0("%")
)
xtable(final_avg_diff_table) %>% print.xtable(
include.rownames = FALSE,
)
library(matrixStats)
library(knitr)
library(arm)
library(saves)
library(haven)
library(PISA2000lite)
library(PISA2003lite)
library(PISA2006lite)
library(PISA2009lite)
library(PISA2012lite)
library(intsvy)
library(cimentadaj) # devtools::install_github("cimentadaj/cimentadaj")
library(countrycode) # For region variable
library(car)
library(SAScii)
library(inequalityintsvy) # devtools::install_github("cimentadaj/inequalityintsvy")
library(lme4)
library(modelr)
library(ggrepel)
library(xtable)
library(ggthemes)
library(tidyverse)
# source("./transform_data.R")
# Conf for PISA_2015
pisa2015_conf <- list(variables = list(pvlabelpref = "PV",
pvlabelsuff = "READ",
weightFinal = "W_FSTUWT",
weightBRR = "W_FSTURWT"),
parameters = list(cutoffs = c(357.77, 420.07, 482.38, 544.68, 606.99, 669.30),
percentiles = c(5, 10, 25, 75, 90, 95),
PVreps = 10,
BRRreps = 80,
weights = "BRR",
replication_scheme = 'pisa')
)
countries <- c("Finland",
"France",
# "New Zealand",
"Austria",
"Australia",
"Sweden",
# "Czech Republic",
"Canada",
"Hungary",
# "Iceland",
"Netherlands",
"Spain",
# "Belgium",
"Italy",
# "Norway",
"United Kingdom",
# "Greece",
"Denmark",
# "Israel",
"Poland",
"United States",
"Germany"
# "Turkey",
# "Russia"
)
results_math_80 <- read_rds("./paper/data/math_80.Rdata")
results_read_80 <- read_rds("./paper/data/read_80.Rdata")
results_math_topmid_80 <- read_rds("./paper/data/math_topmid_80.Rdata")
results_read_topmid_80 <- read_rds("./paper/data/read_topmid_80.Rdata")
results_math_midbottom_80 <- read_rds("./paper/data/math_midbottom_80.Rdata")
results_read_midbottom_80 <- read_rds("./paper/data/read_midbottom_80.Rdata")
results_math_70 <- read_rds("./paper/data/math_70.Rdata")
results_read_70 <- read_rds("./paper/data/read_70.Rdata")
results_math_topmid_70 <- read_rds("./paper/data/math_topmid_70.Rdata")
results_read_topmid_70 <- read_rds("./paper/data/read_topmid_70.Rdata")
results_math_midbottom_70 <- read_rds("./paper/data/math_midbottom_70.Rdata")
results_read_midbottom_70 <- read_rds("./paper/data/read_midbottom_70.Rdata")
complete_data_topbottom_80 <-
pisa_preparer(results_math_80, results_read_80) %>%
mutate(type = "80th/20th SES gap")
complete_data_topmid_80 <-
pisa_preparer(results_math_topmid_80, results_read_topmid_80) %>%
mutate(type = "80th/50th SES gap")
complete_data_midbottom_80 <-
pisa_preparer(results_math_midbottom_80, results_read_midbottom_80) %>%
mutate(type = "50th/20th SES gap")
complete_data_topbottom_70 <-
pisa_preparer(results_math_70, results_read_70) %>%
mutate(type = "70th/30th SES gap")
complete_data_topmid_70 <-
pisa_preparer(results_math_topmid_70, results_read_topmid_70) %>%
mutate(type = "70th/50th SES gap")
complete_data_midbottom_70 <-
pisa_preparer(results_math_midbottom_70, results_read_midbottom_70) %>%
mutate(type = "50th/30th SES gap")
complete_gaps <-
complete_data_topbottom %>%
bind_rows(complete_data_topbottom_80) %>%
bind_rows(complete_data_topbottom_70)
library(readxl)
library(inequalityintsvy)
library(brms)
tracking_data <-
read_xlsx("./paper/data/tracking.xlsx", sheet = "all_data") %>%
map_if(is_double, round, 2) %>%
as_tibble
lm(difference ~ num_tracks + age_selection + I(length > 0) + zvoc,
data = ready_data_age) %>%
vif()
dif_data <- function(my_data, tracking, central, which_gap = "90th/10th SES gap") {
my_data %>%
filter(type_test == "math", type == which_gap) %>%
select(wave, country, difference) %>%
rename(year = wave) %>%
mutate(year = as.character(year)) %>%
left_join(tracking_data, by = c("country" = "cntry_name")) %>%
left_join(central_examination) %>%
mutate(num_tracks = ifelse(tracks15y == 1, 1, 0) %>% as.factor,
age_selection = selage) %>%
filter(!is.na(num_tracks), !is.na(age_selection), !is.na(difference))
}
ready_data_age <-
dif_data(complete_gaps, tracking_data, central_examination) %>%
mutate(age_selection = ifelse(selage >= 15, 1, 0) %>% as.factor)
ivs <- c("num_tracks", "age_selection", "I(length > 0)", "zvoc")
formula_seq <-
lapply(1:length(ivs), function(x) {
paste0("difference ~ ", paste0(ivs[1:x], collapse = " + ") %>% paste0(" + (1|year)"))
}) %>%
lapply(as.formula)
all_track_models <-
map(formula_seq, ~ {
mod_tracking <-
brms::brm(
.x, family = gaussian(),
data = ready_data_age,
warmup = 1000, iter = 2000, chains = 5,
control = list(adapt_delta = 0.90)
)
mod_tracking
})
tidy_dfs <-
map(all_track_models, ~ {
broom::tidy(.x) %>%
.[grepl("^b_", .$term), ] %>%
map_if(is_double, round, 2) %>%
as_tibble %>%
transmute(term,
estimate = paste0(estimate, " (", lower, "/", upper, ")"))
})
tidy_dfs_two <-
reduce(tidy_dfs, full_join, by = "term") %>%
setNames(c(" ", paste("Model", 1:4))) %>%
mutate(" " = c(
"Intercept",
"Num of tracks = 1",
"Age at track >= 15",
"% curriculum tracked",
"Vocational Index"
)) %>%
.[c(2:5, 1), ]
r_square <-
paste0("\\hline ", paste0("R square: & ",
paste0(map(all_track_models, ~ bayes_R2(.x)[1] %>% round(2) * 100) %>% paste0("\\%"),
collapse = " & ")), " \\\\")
n_obs <-
paste0(paste0(" Sample size: & ",
paste0(map(all_track_models, nobs), collapse = " & ")), " \\\\ \\hline")
command_to_row <- paste0(r_square, n_obs)
addtorow_two <- list(pos = list(pos = 5), command = command_to_row)
xtable(tidy_dfs_two) %>% print.xtable(
include.rownames = FALSE,
add.to.row = addtorow_two
)
lm(difference ~ num_tracks + age_selection + I(length > 0) + zvoc,
data = ready_data_age) %>%
vif()
mod_tracking_ext <-
brms::brm(formula_seq[[4]],
family = gaussian(),
data = ready_data_age,
warmup = 1000, iter = 2000, chains = 5,
control = list(adapt_delta = 0.90)
)
new_data <-
ready_data_age %>%
with(crossing(country = countries,
num_tracks = unique(num_tracks),
age_selection = unique(age_selection),
zvoc = mean(zvoc, na.rm = TRUE),
length = typical(length > 0),
year = "2009"))
predictions <- posterior_predict(mod_tracking_ext, newdata = new_data)
sd_obs <- colSds(predictions)
new_data <-
new_data %>%
mutate(
pred = colMeans(predictions),
pred_low = pred - (2 * sd_obs),
pred_high = pred + (2 * sd_obs)
)
sum_ready_data <-
ready_data_age %>%
group_by(country, num_tracks, age_selection) %>%
summarize(avg_diff = mean(difference),
diff_low = avg_diff - 2 * sd(difference),
diff_high = avg_diff + 2 * sd(difference)) %>%
ungroup()
new_data %>%
left_join(sum_ready_data) %>%
mutate(age_selection = ifelse(age_selection == 1, ">= 15", "< 15")) %>%
ggplot(aes(num_tracks, avg_diff, fill = num_tracks)) +
geom_errorbar(aes(ymin = diff_low, ymax = diff_high), width = 0.2, colour = "red") +
geom_point(colour = "red") +
geom_col(aes(y = pred, alpha = 0.4)) +
geom_errorbar(aes(ymin = pred_low, ymax = pred_high), width = 0.2) +
facet_wrap(country ~ age_selection) +
scale_y_continuous(name = "90/10 SD gap", limits = c(0, 4)) +
scale_alpha(guide = F) +
scale_x_discrete(name = "Number of tracks", labels = c("> 1 track", "1 track")) +
scale_fill_manual(values = c("orangered2", "blue3"), guide = F) +
ggtitle("Predicted 90/10 gap for different combinations of number of tracks and age of selection")
pred_avg_diff<-
new_data %>%
left_join(sum_ready_data) %>%
filter(!is.na(avg_diff) | num_tracks == 1 & age_selection == 1) %>%
select(country, num_tracks, age_selection, pred, avg_diff)
track_should_change <- pred_avg_diff$country[pred_avg_diff$country %>% duplicated]
avg_diff_data <-
pred_avg_diff %>%
filter(country %in% track_should_change) %>%
transmute(country,
avg_diff = ifelse(avg_diff %>% is.na, pred, avg_diff),
combn = paste0(num_tracks, "_", age_selection)) %>%
filter(combn != "1_1")
final_avg_diff_table <-
avg_diff_data %>%
left_join(pred_avg_diff %>%
filter(country %in% track_should_change & (num_tracks == 1 & age_selection == 1)) %>%
select(country, pred), by = "country") %>%
select(country, combn, avg_diff, pred) %>%
separate(combn, c("num_tracks", "age_selection"), sep = "_") %>%
transmute(
Country = country,
`Number of tracks` = ifelse(num_tracks == 0, "More than one track", "One track"),
`Age of selection` = ifelse(age_selection == 1, "15 or more", "Less than 15"),
`Actual inequality` = avg_diff %>% round(3),
`Predicted inequality` = pred %>% round(3),
`% reduction` = (((`Actual inequality` - `Predicted inequality`)/ `Actual inequality`) * 100) %>%
ceiling %>% paste0("%")
)
xtable(final_avg_diff_table) %>% print.xtable(
include.rownames = FALSE
)
