)
plot_interaction <-
marginal_effects(stan_models[[length(stan_models)]],
effects = "ztrack:zvoc",
int_conditions = list(zvoc = quantile))
plot(plot_interaction, plot = FALSE)[[1]] +
labs(x = "Tracking Index (SD)", y = "Difference in test scores (SD)") +
scale_colour_discrete(
name = "Vocational index \n quantiles",
labels = seq(100, 0, -25) %>% paste0("%")
) +
scale_fill_discrete(guide = FALSE) +
ggtitle("Interaction between Tracking and Vocational index")
table_ready
stan_models %>%
stan_table() %>%
mutate(" " = c(
"Tracking Index",
"Vocational Index",
"Trackin * Vocational Index",
"Intercept"
))
summary(lm(wt ~ disp + hp + drat + qsec, mtcars))$coef
c(0.006293291,0.0012378070) - c(0.193099658 ,0.060608362)
abs(-0.18680637) - 2 * -0.05937055
sig_vs_sig <- function(coef1, se1, coef2, se2) {
diff <- c(coef1, se1) - c(coef2, se2)
abs(diff[1]) - 2 * diff[2]
}
sig_vs_sig <- function(coef1, se1, coef2, se2) {
diff <- c(coef1, se1) - c(coef2, se2)
abs(diff[1]) - 2 * diff[2]
}
sig_vs_sig(0.006293291,0.0012378070, 0.193099658 ,0.060608362)
stan_models %>%
stan_table()
stan_models
stan_models[[4]] %>% tidy
stan_models[[3]] %>% tidy
stan_models[[3]] %>% broom::tidy
stan_models[[3]]
sig_vs_sig(0.41, 0.04, -0.22, 0.04)
sig_vs_sig(0.41, 0.04, -0.22, 0.04)
plot_interaction <-
marginal_effects(stan_models[[length(stan_models)]],
effects = "ztrack:zvoc",
int_conditions = list(zvoc = quantile))
plot(plot_interaction, plot = FALSE)[[1]] +
labs(x = "Tracking Index (SD)", y = "Difference in test scores (SD)") +
scale_colour_discrete(
name = "Vocational index \n quantiles",
labels = seq(100, 0, -25) %>% paste0("%")
) +
scale_fill_discrete(guide = FALSE) +
ggtitle("Interaction between Tracking and Vocational index")
stan_models %>%
stan_table() %>%
mutate(" " = c(
"Tracking Index",
"Vocational Index",
"Trackin * Vocational Index",
"Intercept"
)) %>%
xtable() %>%
print.xtable(
include.rownames = FALSE,
add.to.row = table_details(stan_models)
)
gaps <- c("90th/10th SES gap", "80th/20th SES gap", "70th/30th SES gap")
all_gaps_models <-
map(gaps, function(gap) {
ready_data_age <-
dif_data(complete_gaps, tracking_data, central_examination, which_gap = gap) %>%
mutate(age_selection = ifelse(selage >= 15, 1, 0) %>% as.factor)
mod_tracking <-
brms::brm(
difference ~
ztrack +
zvoc +
ztrack:zvoc +
(1|year), family = gaussian(),
data = ready_data_age,
warmup = 1000, iter = 2000, chains = 5,
control = list(adapt_delta = 0.95)
)
mod_tracking
})
model_data_merged <-
map(all_gaps_models, ~ fixef(.x)[, c(1, 3, 4)] %>% as_tibble) %>%
setNames(gaps) %>%
enframe() %>%
unnest(value) %>%
mutate_if(is_double, round, 2) %>%
transmute(model = name,
terms = all_gaps_models[[1]] %>% fixef %>% row.names %>% rep(3),
estimate = Estimate,
lower = `2.5%ile`,
upper = `97.5%ile`)
model_data_merged %>%
ggplot(aes(terms, estimate, colour = model)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_point() +
geom_hline(yintercept = 0) +
scale_colour_discrete(name = NULL) +
scale_y_continuous(limits = c(-0.5, 2)) +
scale_x_discrete(labels = c("Intercept",
"Tracking Index",
"Vocational * Tracking Index",
"Vocational Index")) +
labs(y = "Estimate from linear model", x = "Predictors") +
ggtitle("Estimation of tracking/vocational models for different gaps") +
coord_flip()
plot_interaction <-
marginal_effects(all_gaps_models[[2]],
effects = "ztrack:zvoc",
int_conditions = list(zvoc = quantile))
plot(plot_interaction, plot = FALSE)[[1]] +
labs(x = "Tracking Index (SD)", y = "90/10 Achievement gap (SD)") +
scale_colour_discrete(
name = "Vocational index \n quantiles",
labels = seq(100, 0, -25) %>% paste0("%")
) +
scale_fill_discrete(guide = FALSE) +
ggtitle("Interaction between Tracking and Vocational index")
plot_interaction <-
marginal_effects(all_gaps_models[[3]],
effects = "ztrack:zvoc",
int_conditions = list(zvoc = quantile))
plot(plot_interaction, plot = FALSE)[[1]] +
labs(x = "Tracking Index (SD)", y = "90/10 Achievement gap (SD)") +
scale_colour_discrete(
name = "Vocational index \n quantiles",
labels = seq(100, 0, -25) %>% paste0("%")
) +
scale_fill_discrete(guide = FALSE) +
ggtitle("Interaction between Tracking and Vocational index")
<<all_gaps_plot>>=
gaps <- c("90th/10th SES gap", "80th/20th SES gap", "70th/30th SES gap")
all_gaps_models <-
map(gaps, function(gap) {
ready_data_age <-
dif_data(complete_gaps, tracking_data, central_examination, which_gap = gap) %>%
mutate(age_selection = ifelse(selage >= 15, 1, 0) %>% as.factor)
mod_tracking <-
brms::brm(
difference ~
ztrack +
zvoc +
ztrack:zvoc +
(1|year), family = gaussian(),
data = ready_data_age,
warmup = 1000, iter = 2000, chains = 5,
control = list(adapt_delta = 0.95)
)
mod_tracking
})
model_data_merged <-
map(all_gaps_models, ~ fixef(.x)[, c(1, 3, 4)] %>% as_tibble) %>%
setNames(gaps) %>%
enframe() %>%
unnest(value) %>%
mutate_if(is_double, round, 2) %>%
transmute(model = name,
terms = all_gaps_models[[1]] %>% fixef %>% row.names %>% rep(3),
estimate = Estimate,
lower = `2.5%ile`,
upper = `97.5%ile`)
model_data_merged %>%
ggplot(aes(terms, estimate, colour = model)) +
geom_errorbar(aes(ymin = lower, ymax = upper), width = 0.1) +
geom_point() +
geom_hline(yintercept = 0) +
scale_colour_discrete(name = NULL) +
scale_y_continuous(limits = c(-0.5, 2)) +
scale_x_discrete(labels = c("Intercept",
"Tracking Index",
"Vocational * Tracking Index",
"Vocational Index")) +
labs(y = "Estimate from linear model", x = "Predictors") +
ggtitle("Estimation of tracking/vocational models for different gaps") +
coord_flip()
# It under predicts the y value rather than over predict
# It has problems predicting the central tendency of the model
# This linear model explains the pooled 90/10 differences
@
vars_unique <- c("length", "num_tracks", "age_selection", "central_examination", "ztrack",
"zvoc")
all_gaps_models_cum <-
map(gaps, function(gap) {
gap_data <- dif_data(complete_gaps, tracking_data, central_examination, which_gap = gap)
ready_data_age <-
gap_data %>%
mutate(age_selection = ifelse(selage >= 15, 1, 0) %>% as.factor) %>%
group_by(country) %>%
summarize_at(vars(vars_unique), unique) %>%
mutate(cum_diff =
gap_data %>%
group_by(country) %>%
summarize(m = sum(difference)) %>%
pull(m))
mod_tracking <-
ready_data_age %>%
filter(!is.na(age_selection)) %>%
brm(
cum_diff ~ ztrack + zvoc,
family = gaussian(),
data = .,
warmup = 1000, iter = 2000, chains = 5
)
mod_tracking
})
all_gaps_models_cum %>%
stan_table() %>%
mutate(" " = c(
"Track Index",
"Vocational Index",
"Intercept"
)) %>%
setNames(c(" ", gsub(" SES gap", "", gaps)))
all_gaps_models_cum %>%
stan_table() %>%
mutate(" " = c(
"Track Index",
"Vocational Index",
"Intercept"
)) %>%
setNames(c(" ", gsub(" SES gap", "", gaps))) %>%
xtable() %>%
print.xtable(
include.rownames = FALSE,
add.to.row = table_details(all_gaps_models_cum)
)
var1 <- c("a", "b", "c", "d")
var2 <- c("e", "f", "g", "h")
df1 <- data.frame(var1, var2)
a <- 10:14
b <- 20:24
c <- 30:34
d <- 40:44
df2 <- data.frame(a, b, c, d)
df1[1, "var1"]
df2$a
df1
df1
df2
for (x in 1:nrow(df1)) {
print(df2[, df1[x, "var1"]])
}
df1[x, "var1"]
x
var1 <- c("a", "b", "c", "d")
var2 <- c("e", "f", "g", "h")
df1 <- data.frame(var1, var2)
a <- 10:14
b <- 20:24
c <- 30:34
d <- 40:44
df2 <- data.frame(a, b, c, d)
rm(x)
for (x in 1:nrow(df1)) {
print(df2[, df1[x, "var1"]])
}
getwd()
setwd("..")
getwd()
setwd("./cimentadaj.github.io/_source/try/")
list.files()
servr::jekyll()
setwd("/Users/cimentadaj/Downloads/gitrepo/Achievement_Gap_PISA/")
library(matrixStats)
library(knitr)
library(arm)
library(saves)
library(haven)
library(PISA2000lite)
library(PISA2003lite)
library(PISA2006lite)
library(PISA2009lite)
library(PISA2012lite)
library(intsvy)
library(cimentadaj) # devtools::install_github("cimentadaj/cimentadaj")
library(countrycode) # For region variable
library(car)
library(SAScii)
library(inequalityintsvy) # devtools::install_github("cimentadaj/inequalityintsvy")
library(lme4)
library(modelr)
library(ggrepel)
library(xtable)
library(ggthemes)
library(readxl)
library(inequalityintsvy)
library(brms)
library(tidyverse)
# source("./transform_data.R")
# Conf for PISA_2015
pisa2015_conf <- list(variables = list(pvlabelpref = "PV",
pvlabelsuff = "READ",
weightFinal = "W_FSTUWT",
weightBRR = "W_FSTURWT"),
parameters = list(cutoffs = c(357.77, 420.07, 482.38, 544.68, 606.99, 669.30),
percentiles = c(5, 10, 25, 75, 90, 95),
PVreps = 10,
BRRreps = 80,
weights = "BRR",
replication_scheme = 'pisa')
)
countries <- c("Finland",
"France",
# "New Zealand",
"Austria",
"Australia",
"Sweden",
# "Czech Republic",
"Canada",
"Hungary",
# "Iceland",
"Netherlands",
"Spain",
# "Belgium",
"Italy",
# "Norway",
"United Kingdom",
# "Greece",
"Denmark",
# "Israel",
"Poland",
"United States",
"Germany"
# "Turkey",
# "Russia"
)
results_math_80 <- read_rds("./paper/data/math_80.Rdata")
results_read_80 <- read_rds("./paper/data/read_80.Rdata")
results_math_topmid_80 <- read_rds("./paper/data/math_topmid_80.Rdata")
results_read_topmid_80 <- read_rds("./paper/data/read_topmid_80.Rdata")
results_math_midbottom_80 <- read_rds("./paper/data/math_midbottom_80.Rdata")
results_read_midbottom_80 <- read_rds("./paper/data/read_midbottom_80.Rdata")
results_math_70 <- read_rds("./paper/data/math_70.Rdata")
results_read_70 <- read_rds("./paper/data/read_70.Rdata")
results_math_topmid_70 <- read_rds("./paper/data/math_topmid_70.Rdata")
results_read_topmid_70 <- read_rds("./paper/data/read_topmid_70.Rdata")
results_math_midbottom_70 <- read_rds("./paper/data/math_midbottom_70.Rdata")
results_read_midbottom_70 <- read_rds("./paper/data/read_midbottom_70.Rdata")
<<merge_all_gaps>>=
complete_data_topbottom_80 <-
pisa_preparer(results_math_80, results_read_80) %>%
mutate(type = "80th/20th SES gap")
complete_data_topmid_80 <-
pisa_preparer(results_math_topmid_80, results_read_topmid_80) %>%
mutate(type = "80th/50th SES gap")
complete_data_midbottom_80 <-
pisa_preparer(results_math_midbottom_80, results_read_midbottom_80) %>%
mutate(type = "50th/20th SES gap")
####
complete_data_topbottom_70 <-
pisa_preparer(results_math_70, results_read_70) %>%
mutate(type = "70th/30th SES gap")
complete_data_topmid_70 <-
pisa_preparer(results_math_topmid_70, results_read_topmid_70) %>%
mutate(type = "70th/50th SES gap")
complete_data_midbottom_70 <-
pisa_preparer(results_math_midbottom_70, results_read_midbottom_70) %>%
mutate(type = "50th/30th SES gap")
####
complete_gaps <-
complete_data_topbottom %>%
bind_rows(complete_data_topbottom_80) %>%
bind_rows(complete_data_topbottom_70)
@
tracking_data <-
read_xlsx("./data/tracking.xlsx", sheet = "all_data") %>%
map_if(is_double, round, 2) %>%
as_tibble
dif_data <- function(my_data, tracking, which_gap = "90th/10th SES gap") {
my_data %>%
filter(type_test == "math", type == which_gap) %>%
select(wave, country, difference) %>%
rename(year = wave) %>%
mutate(year = as.character(year)) %>%
left_join(tracking_data, by = c("country" = "cntry_name")) %>%
mutate(num_tracks = ifelse(tracks15y == 1, 1, 0) %>% as.factor,
age_selection = selage) %>%
filter(!is.na(num_tracks), !is.na(age_selection), !is.na(difference))
}
formula_sequence <- function(dv, ivs, random_effect) {
formula_seq <-
lapply(1:length(ivs), function(x) {
paste0(dv ," ~ ", paste0(ivs[1:x], collapse = " + ") %>% paste0(" + ", random_effect))
}) %>%
lapply(as.formula)
formula_seq
}
stan_model_builder <- function(dv, iv, random, data) {
all_formulas <- formula_sequence(dv, iv, random)
mod_tracking <-
map(all_formulas, ~ {
brms::brm(
.x,
family = gaussian(),
data = data,
warmup = 1000, iter = 2000, chains = 5
)
})
}
stan_extractor <- function(models) {
coef_list <-
map(models, ~ {
broom::tidy(.x) %>%
.[grepl("^b_", .$term), ] %>%
map_if(is_double, round, 2) %>%
as_tibble %>%
transmute(term,
estimate = paste0(estimate, " (", lower, "/", upper, ")"))
})
coef_list
}
stan_table_builder <- function(models_extracted) {
intermediate_table <-
reduce(models_extracted, full_join, by = "term") %>%
setNames(c(" ", paste("Model", seq_len(models_extracted %>% length))))
row_order <-
setdiff(seq_len(nrow(intermediate_table)),
grep("Intercept", intermediate_table$` `)) %>%
`c`(grep("Intercept", intermediate_table$` `))
intermediate_table[row_order, ]
}
stan_table <- function(models) {
table_ready <-
models %>%
stan_extractor() %>%
stan_table_builder()
table_ready
}
table_details <- function(models) {
random_effect <- nrow(models[[length(models)]]$ranef) > 0
where_to_place <-
models[[length(models)]]$formula$formula %>%
as.character %>%
.[-(1:2)] %>%
stringr::str_split(" \\+ ") %>%
pluck(1) %>%
.[if (random_effect) -length(.) else 1:length(.)] %>%
length
r_square <-
paste0("\\hline ",
paste0("R square: & ",
paste0(map(models, ~ bayes_R2(.x)[1] %>% round(2) * 100) %>% paste0("\\%"),
collapse = " & ")), " \\\\")
n_obs <-
paste0(paste0(" Sample size: & ",
paste0(map(models, nobs), collapse = " & ")), " \\\\ \\hline")
command_to_row <- paste0(r_square, n_obs)
addtorow_two <- list(pos = list(pos = where_to_place + 1), command = command_to_row)
addtorow_two
}
ready_data_age <-
dif_data(complete_gaps, tracking_data) %>%
mutate(age_selection = ifelse(selage >= 15, 1, 0) %>% as.factor)
@
The reason why countries differ in their evolution of inequality is still unknown. There is ample evidence showing the inequality between countries, to a certain extent, can be explained by the degree of tracking (Hanushek and Woessman). But we are also interested in what explains the between country evolution of inequality, that is, the explanation as to why in certain countries it is increasing more than others over time.
This is clearly a difficult task given than, at least the country-level, not many features of the educational system change in a 15-year time span, resulting in a practically invariant variable from which to explain the level of inequality (without any variance, we can't explain anything.). However, there are other strategies that can at least partially help us to understand the phenomena, and these are precisely the ones we follow.
Following the literature on the topic, we suspect that this evolution is in part very tightly related to the degree of stratification of the educational system. In a very simple frame-work, Hanushek and Woessman found that tracking indeed exarcebates inequality in the life course of children. Following the same strategy, we believe that tracking is also allowing the same gap in 15 year olds to grow over time, acompannied by other things. Yet, instead of concetrating only on the age of selection (just as they do), we explore a more fine grained definition of tracking, which is possible through the work of Thijs and Van der Werfhorst(). Excluding the age of first selection into tracks, we also use the the number of tracks in the country, the percentage of the entire curriculum that is tracked and a vocational index \footnote{This index is a factor loading from a principal factor analysis of the percentage of students in upper secondary vocational education (taken from two sources, to reduce measurement error)}.
our_formula <- difference ~ num_tracks + age_selection + I(length > 0) + zvoc
lm(our_formula,
data = ready_data_age) %>%
vif()
mod_tracking_ext <-
brms::brm(our_formula,
family = gaussian(),
data = ready_data_age,
warmup = 1000, iter = 2000, chains = 5,
control = list(adapt_delta = 0.90)
)
new_data <-
ready_data_age %>%
with(crossing(country = countries,
num_tracks = unique(num_tracks),
age_selection = unique(age_selection),
zvoc = mean(zvoc, na.rm = TRUE),
length = typical(length > 0),
year = "2009"))
predictions <- posterior_predict(mod_tracking_ext, newdata = new_data)
sd_obs <- colSds(predictions)
new_data <-
new_data %>%
mutate(
pred = colMeans(predictions),
pred_low = pred - (2 * sd_obs),
pred_high = pred + (2 * sd_obs)
)
sum_ready_data <-
ready_data_age %>%
group_by(country, num_tracks, age_selection) %>%
summarize(avg_diff = mean(difference),
diff_low = avg_diff - 2 * sd(difference),
diff_high = avg_diff + 2 * sd(difference)) %>%
ungroup()
new_data %>%
left_join(sum_ready_data) %>%
mutate(age_selection = ifelse(age_selection == 1, ">= 15", "< 15")) %>%
ggplot(aes(num_tracks, avg_diff, fill = num_tracks)) +
geom_point(colour = "red") +
geom_errorbar(aes(ymin = diff_low, ymax = diff_high), width = 0.2, colour = "red") +
geom_col(aes(y = pred, alpha = 0.4)) +
geom_errorbar(aes(ymin = pred_low, ymax = pred_high), width = 0.2) +
facet_wrap(country ~ age_selection) +
scale_y_continuous(name = "90/10 SD gap", limits = c(0, 4)) +
scale_alpha(guide = F) +
scale_x_discrete(name = "Number of tracks", labels = c("> 1 track", "1 track")) +
scale_fill_manual(values = c("orangered2", "blue3"), guide = F) +
ggtitle("Predicted 90/10 gap for different combinations of number of tracks and age of selection")
