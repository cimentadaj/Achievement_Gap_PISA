data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
describe(school_data_ready[[1]])
head(school_data_ready[[1]])
lapply(school_data_ready, function(x) unique(x[[2]]))
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate_(private_public = as.character(selected))
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, private_public, "year", "country")
})
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate_(private_public = as.character(selected)) %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, private_public, "year", "country")
})
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate_("private_public" = as.character(selected)) %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, private_public, "year", "country")
})
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, private_public, "year", "country")
})
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble()
lapply(school_data_ready, function(x) {
sapply(x, class)
})
school_data_ready %>%
enframe() %>%
unnest()
?sweep
?Map
school_data_ready[[1]][1]
school_data_ready[[1]][ ,1]
lapply(school_data_ready, function(x) {
sapply(x, class)
})
school_data_ready <- lapply(school_data_ready, function(data) {
data[, 1] <- as.numeric(data[, 1])
data[, 2] <- as.character(data[, 2])
data
})
school_data_ready <- lapply(school_data_ready, function(data) {
data[, 1] <- as.numeric(as.character(data[, 1]))
data[, 2] <- as.character(data[, 2])
data
})
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble()
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
lapply(school_data_ready, head)
school_data_ready <- lapply(school_data_ready, function(data) {
data[, 1] <- as.numeric(as.character(data[, 1]))
data[, 2] <- as.character(data[, 2])
names(data)[2] <- "private_public"
data
})
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble()
lapply(school_data_ready, head)
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
lapply(school_data_ready, head)
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
school_data_ready <- lapply(school_data_ready, function(data) {
data[, 1] <- as.numeric(as.character(data[, 1]))
data[, 2] <- as.character(data[, 2])
names(data)[1] <- "school_id"
names(data)[2] <- "private_public"
data
})
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble()
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
count(country, year, private_public)
m <- school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble()
m$private_public
unique(m$private_public)
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
school_data_ready[1:5, 1:5]
school_data_ready[[6]][1:5, 1:5]
school_data_ready[[6]][1:5, ]
as.character(school_data_ready[[6]]$SC013Q01TA)
for(i in 1:6) print(class(as.character(school_data_ready[[i]]$SC013Q01TA)))
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
school_data_ready <- lapply(school_data_ready, function(data) {
data[, 1] <- as.numeric(as.character(data[, 1]))
data[, 2] <- as.character(data[, 2])
names(data)[1] <- "school_id"
names(data)[2] <- "private_public"
data
})
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
count(country, year, private_public)
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
lapply(school_data_ready, head)
lapply(school_data_ready, function(x) unique(x[, 2]))
lapply(school_data_ready, function(x) unique(x[[, 2]]))
lapply(school_data_ready, function(x) unique(x[[2]]))
lapply(school_data_ready, function(x) as.character(x[[2]]))
lapply(school_data_ready, function(x) as.character(x[[2]])[1:50])
lapply(school_data_ready, function(x) unique(x[[2]]))
school_data_ready <- lapply(school_data_ready, function(data) {
data[, 1] <- as.numeric(as.character(data[, 1]))
data[, 2] <- as.character(data[, 2])
names(data)[1] <- "school_id"
names(data)[2] <- "private_public"
data
})
?recode
?dplyr::recode
m <- school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble()
unique(m$private_public)
m <- school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private'))
unique(m$private_public)
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private',
'NA' = NA))
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private'))
m <- school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private'))
m
unique(m$private_public)
school_data_ready <-
pmap(list(school_data, key, school_vars, years), function(data, key_var, selected, year) {
data %>%
mutate(country = pisa_countrynames[CNT],
year = year) %>%
select_(key_var, selected, "year", "country")
})
school_data_ready <- lapply(school_data_ready, function(data) {
names(data)[1] <- "school_id"
names(data)[2] <- "private_public"
data$school_id <- as.numeric(as.character(data$school_id))
data$private_public <- as.character(data$private_public)
data
})
m <- school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private'))
unique(m$private_public)
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
count(country, year, private_public)
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private'))
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
count(country, as.character(year), private_public)
?count
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
dplyr::count(country, year, private_public)
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n())
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n())
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public))
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public)) %>%
group_by(country, year) %>%
mutate(n_total = n())
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public)) %>%
mutate(total = sum(n),
total_perc = n / total * 100)
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public)) %>%
mutate(total = sum(n),
total_perc = round(n / total * 100), 2)
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public)) %>%
mutate(total = sum(n),
total_perc = round(n / total * 100, 2))
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public)) %>%
mutate(total = sum(n),
total_perc = round(n / total * 100, 2)) %>%
ggplot(aes(year, total_perc, group = private_public, color = private_public)) +
geom_line()
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public)) %>%
mutate(total = sum(n),
total_perc = round(n / total * 100, 2))
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public)) %>%
mutate(total = sum(n),
total_perc = round(n / total * 100, 2)) %>%
ggplot(aes(year, total_perc, group = private_public, color = private_public)) +
geom_line() +
facet_wrap(~ country)
school_data_ready %>%
enframe() %>%
unnest() %>%
as_tibble() %>%
mutate(private_public = dplyr::recode(private_public,
'1' = "public",
'2' = "private",
'Public' = 'public',
'Private' ='private')) %>%
group_by(country, year, private_public) %>%
summarize(n = n()) %>%
filter(!is.na(private_public)) %>%
mutate(total = sum(n),
total_perc = round(n / total * 100, 2)) %>%
filter(country %in% countries) %>%
ggplot(aes(year, total_perc, group = private_public, color = private_public)) +
geom_line() +
facet_wrap(~ country)
library(tidyverse)
library(knitr)
library(arm)
library(saves)
library(haven)
library(PISA2000lite)
library(PISA2003lite)
library(PISA2006lite)
library(PISA2009lite)
library(PISA2012lite)
library(intsvy)
library(cimentadaj) # devtools::install_github("cimentadaj/cimentadaj")
library(countrycode) # For region variable
library(car)
library(SAScii)
library(inequalityintsvy) # devtools::install_github("cimentadaj/inequalityintsvy")
library(lme4)
library(modelr)
library(ggrepel)
library(xtable)
library(ggthemes)
library(matrixStats)
library(WDI)
# source("./transform_data.R")
# Conf for PISA_2015
pisa2015_conf <- list(variables = list(pvlabelpref = "PV",
pvlabelsuff = "READ",
weightFinal = "W_FSTUWT",
weightBRR = "W_FSTURWT"),
parameters = list(cutoffs = c(357.77, 420.07, 482.38, 544.68, 606.99, 669.30),
percentiles = c(5, 10, 25, 75, 90, 95),
PVreps = 10,
BRRreps = 80,
weights = "BRR",
replication_scheme = 'pisa')
)
countries <- c("Finland",
"France",
# "New Zealand",
"Austria",
"Australia",
"Sweden",
# "Czech Republic",
"Canada",
"Hungary",
# "Iceland",
"Netherlands",
"Spain",
# "Belgium",
"Italy",
# "Norway",
"United Kingdom",
# "Greece",
"Denmark",
# "Israel",
"Poland",
"United States",
"Germany"
# "Turkey",
# "Russia"
)
